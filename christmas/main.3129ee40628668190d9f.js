(()=>{"use strict";var e={769:(e,s,t)=>{e.exports=t.p+"f3387537af443030ea20.json"}},s={};function t(r){var i=s[r];if(void 0!==i)return i.exports;var a=s[r]={exports:{}};return e[r](a,a.exports,t),a.exports}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var s=t.g.document;if(!e&&s&&(s.currentScript&&(e=s.currentScript.src),!e)){var r=s.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e;!function(e){e.ASC="ВВЕРХ",e.DSC="ВНИЗ"}(e||(e={}));var s=t(769),r=function(e,s,t,r){return new(t||(t=Promise))((function(i,a){function l(e){try{h(r.next(e))}catch(e){a(e)}}function n(e){try{h(r.throw(e))}catch(e){a(e)}}function h(e){var s;e.done?i(e.value):(s=e.value,s instanceof t?s:new t((function(e){e(s)}))).then(l,n)}h((r=r.apply(e,s||[])).next())}))};class i{build(){return r(this,void 0,void 0,(function*(){return yield this.load(s)}))}load(e){return r(this,void 0,void 0,(function*(){const s=yield fetch(e);return(yield s.json()).map((e=>({num:Number(e.num),name:e.name,count:Number(e.count),year:Number(e.year),shape:e.shape,color:e.color,size:e.size,favorite:e.favorite})))}))}}class a{constructor({num:e,name:s,count:t,year:r,shape:i,color:a,size:l,favorite:n,selected:h=!1}){this.num=e,this.name=s,this.count=t,this.year=r,this.shape=i,this.color=a,this.size=l,this.favorite=n,this.selected=h}generateCard(){let e="";const s=document.createElement("div");s.className="card",this.selected&&(s.className="card active");const t=this.favorite?"да":"нет";return e+=`<h2 class="card__title">${this.name}</h2>\n           <img class="card__image" src="./assets/img/${this.num}.png" alt="${this.name}">\n           <div class="card__description">\n            <p>Количество: <span>${this.count}</span></p>\n            <p>Год покупки: <span>${this.year}</span> год</p>\n            <p>Форма игрушки: <span>${this.shape}</span></p>\n            <p>Цвет игрушки: <span>${this.color}</span></p>\n            <p>Размер игрушки: <span>${this.size}</span></p>\n            <p>Любимая: <span>${t}</span></p>\n           </div>\n           <div class="ribbon"></div>\n          `,s.innerHTML=e,s}selectCard(){this.selected=!0}}class l{constructor(){this.sliders=document.querySelectorAll(".range__input"),this.displayValueOne=document.querySelector("#range1"),this.displayValueTwo=document.querySelector("#range2"),this.displayValueThree=document.querySelector("#range3"),this.displayValueFour=document.querySelector("#range4"),this.sliderTracks=document.querySelectorAll(".range__input"),this.sliderOneMaxValue=this.sliderTracks[0].max,this.sliderOneMinValue=this.sliderTracks[0].min,this.sliderTwoMaxValue=this.sliderTracks[2].max,this.sliderTwoMinValue=this.sliderTracks[2].min}setRangeSliders(e){this.sliders=e,this.colorSlider(this.sliders),this.sliders[0].addEventListener("input",(()=>{parseInt(this.sliders[1].value)-parseInt(this.sliders[0].value)<=0&&(this.sliders[0].value=`${parseInt(this.sliders[1].value)}`),this.colorSlider(this.sliders)})),this.sliders[1].addEventListener("input",(()=>{parseInt(this.sliders[1].value)-parseInt(this.sliders[0].value)<=0&&(this.sliders[1].value=`${parseInt(this.sliders[0].value)}`),this.colorSlider(this.sliders)})),this.sliders[2].addEventListener("input",(()=>{parseInt(this.sliders[3].value)-parseInt(this.sliders[2].value)<=0&&(this.sliders[2].value=`${parseInt(this.sliders[3].value)}`),this.colorSlider(this.sliders)})),this.sliders[3].addEventListener("input",(()=>{parseInt(this.sliders[3].value)-parseInt(this.sliders[2].value)<=0&&(this.sliders[3].value=`${parseInt(this.sliders[2].value)}`),this.colorSlider(this.sliders)}))}colorSlider(e){this.displayValueOne.textContent=e[0].value,this.displayValueTwo.textContent=e[1].value,this.displayValueThree.textContent=e[2].value,this.displayValueFour.textContent=e[3].value;const s=(parseInt(e[0].value)-parseInt(this.sliderOneMinValue))/(parseInt(this.sliderOneMaxValue)-parseInt(this.sliderOneMinValue))*100,t=(parseInt(e[1].value)-parseInt(this.sliderOneMinValue))/(parseInt(this.sliderOneMaxValue)-parseInt(this.sliderOneMinValue))*100,r=(parseInt(e[2].value)-parseInt(this.sliderTwoMinValue))/(parseInt(this.sliderTwoMaxValue)-parseInt(this.sliderTwoMinValue))*100,i=(parseInt(e[3].value)-parseInt(this.sliderTwoMinValue))/(parseInt(this.sliderTwoMaxValue)-parseInt(this.sliderTwoMinValue))*100;this.sliderTracks[0].style.background=`linear-gradient(to right, #fff ${s}% , #278D9F ${s}% , #278D9F ${t}%, #fff ${t}%)`,this.sliderTracks[2].style.background=`linear-gradient(to right, #fff ${r}% , #278D9F ${r}% , #278D9F ${i}%, #fff ${i}%)`}}class n{constructor(e,s){this.cardsToShowArray=[],this.filters=e,this.sortConditions=s}parceData(e){return this.filterData(e),this.sortData(this.cardsToShowArray),this.cardsToShowArray}filterData(e){this.cardsToShowArray=[],e.map((e=>{let s=!0;this.filters.name&&s&&(e.name.toLowerCase().includes(this.filters.name)||(s=!1)),Object.prototype.hasOwnProperty.call(this.filters,"favorite")&&s&&this.filters.favorite!==e.favorite&&(s=!1),this.filters.size&&s&&(s=this.filters.size.some((s=>s===e.size))),this.filters.color&&s&&(s=this.filters.color.some((s=>s===e.color))),this.filters.shape&&s&&(s=this.filters.shape.some((s=>s===e.shape))),this.filters.count&&s&&(this.filters.count.from>e.count||this.filters.count.to<e.count)&&(s=!1),this.filters.year&&s&&(this.filters.year.from>e.year||this.filters.year.to<e.year)&&(s=!1),s&&this.cardsToShowArray.push(e)}))}sortData(s){this.sortConditions.direction===e.ASC?s.sort(((e,s)=>e[this.sortConditions.key]>s[this.sortConditions.key]?1:-1)):s.sort(((e,s)=>e[this.sortConditions.key]>s[this.sortConditions.key]?-1:1))}}(new class{constructor(){this.allCardsArray=[],this.cardsOnPageArray=[],this.selectedCards=[],this.filteredCards=[],this.rangeSortedArray=[],this.favoriteValue=!1,this.allCardsArray=[],this.cardsOnPageArray=[],this.selectedCards=[],this.filteredCards=[],this.rangeSortedArray=[],this.favoriteValue=!1,this.sizeArray=[],this.colorArray=[],this.shapeArray=[],this.filters={},this.sortConditions={key:"name",direction:e.ASC},this.selectBtn=document.querySelector(".select"),this.selectedBtn=document.querySelector(".favorite-number"),this.favoriteBtn=document.querySelector(".filter_favorite"),this.sizeBtns=document.querySelectorAll(".filter_size"),this.colorBtns=document.querySelectorAll(".filter_color"),this.shapeBtns=document.querySelectorAll(".filter_shape"),this.searchBtn=document.querySelector(".search"),this.resetBtn=document.querySelector(".reset"),this.resetLocalStorageBtn=document.querySelector(".reset_local-storage"),this.sliders=document.querySelectorAll(".range__input")}getCardsList(){const s=new i,t=new l;this.filters=JSON.parse(localStorage.getItem("filters")||"{}"),this.sortConditions=JSON.parse(localStorage.getItem("sortConditions")||"{}"),this.selectedCards=JSON.parse(localStorage.getItem("selectedCards")||"[]"),this.setButtons(),this.setSelected(),s.build().then((s=>{s.forEach((e=>{this.allCardsArray.push(e)}));const r=new n(this.filters,this.sortConditions);this.allCardsArray.sort(((e,s)=>e.name>s.name?1:-1)),this.cardsOnPageArray=r.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray),this.searchBtn.addEventListener("change",(()=>{this.searchBtn.value?(this.filters.name=this.searchBtn.value.toLowerCase(),this.searchBtn.style.backgroundImage='url("../assets/img/svg/cross.svg")'):this.filters.name&&!this.searchBtn.value&&(delete this.filters.name,this.searchBtn.style.backgroundImage='url("../assets/img/svg/search.svg")'),this.setLocalStorage(),this.cardsOnPageArray=r.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray)})),this.selectBtn.addEventListener("change",(()=>{this.sortConditions.key=this.selectBtn.value.split("-")[0],"DSC"===this.selectBtn.value.split("-")[1].toUpperCase()?this.sortConditions.direction=e.DSC:this.sortConditions.direction=e.ASC,this.setLocalStorage(),this.cardsOnPageArray=r.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray)})),this.favoriteBtn.addEventListener("click",(()=>{this.favoriteBtn.checked?this.filters.favorite=!0:delete this.filters.favorite,this.setLocalStorage(),this.cardsOnPageArray=r.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray)})),this.sizeBtns.forEach((e=>{e.addEventListener("click",(()=>{this.sizeArray=[],this.sizeBtns.forEach((e=>{e.checked&&this.sizeArray.push(e.dataset.filter)})),this.sizeArray.length>0?this.filters.size=this.sizeArray:delete this.filters.size,this.setLocalStorage(),this.cardsOnPageArray=r.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray)}))})),this.colorBtns.forEach((e=>{e.addEventListener("click",(()=>{e.classList.toggle("active"),this.colorArray=[],this.colorBtns.forEach((e=>{e.className.includes("active")&&this.colorArray.push(e.dataset.filter)})),this.colorArray.length>0?this.filters.color=this.colorArray:delete this.filters.color,this.setLocalStorage(),this.cardsOnPageArray=r.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray)}))})),this.shapeBtns.forEach((e=>{e.addEventListener("click",(()=>{e.classList.toggle("active"),this.shapeArray=[],this.shapeBtns.forEach((e=>{e.className.includes("active")&&this.shapeArray.push(e.dataset.filter)})),this.shapeArray.length>0?this.filters.shape=this.shapeArray:delete this.filters.shape,this.setLocalStorage(),this.cardsOnPageArray=r.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray)}))})),t.setRangeSliders(this.sliders),this.sliders.forEach((e=>{e.addEventListener("change",(e=>{e.target!==this.sliders[0]&&e.target!==this.sliders[1]||(this.filters.count={from:Number(this.sliders[0].value),to:Number(this.sliders[1].value)}),e.target!==this.sliders[2]&&e.target!==this.sliders[3]||(this.filters.year={from:Number(this.sliders[2].value),to:Number(this.sliders[3].value)}),this.setLocalStorage(),this.cardsOnPageArray=r.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray)}))})),this.resetBtn.addEventListener("click",(()=>{this.filters={},this.setLocalStorage(),this.favoriteBtn.checked=!1,this.sizeBtns.forEach((e=>{e.checked=!1})),this.colorBtns.forEach((e=>{e.classList.remove("active")})),this.shapeBtns.forEach((e=>{e.classList.remove("active")}));const e=new l;this.sliders[0].value="0",this.sliders[1].value="12",this.sliders[2].value="1940",this.sliders[3].value="2021",e.setRangeSliders(this.sliders);const s=new n(this.filters,this.sortConditions);this.cardsOnPageArray=s.parceData(this.allCardsArray),this.checkIfSelected(),this.renderCards(this.cardsOnPageArray)})),this.resetLocalStorageBtn.addEventListener("click",(()=>{localStorage.removeItem("filters"),localStorage.removeItem("sortConditions"),localStorage.removeItem("selectedCards")}))}))}renderCards(e){const s=document.querySelector(".cards-inner-container");if(s.innerHTML="",0===e.length){const e=document.createElement("div");e.innerHTML="Извините, совпадений не обнаружено",e.className="no-cards",s.append(e)}e.forEach((e=>{const t=new a(e),r=t.generateCard();s.append(r),r.addEventListener("click",(()=>{this.selectCards(t,r)}))}))}selectCards(e,s){if(this.selectedCards.length<20&&!this.selectedCards.includes(e))this.selectedCards.push(e),this.setLocalStorage(),s.classList.add("active"),this.selectedBtn.innerHTML=`${this.selectedCards.length}`;else if(this.selectedCards.includes(e)){const t=this.selectedCards.indexOf(e);this.selectedCards.splice(t,1),this.setLocalStorage(),s.classList.remove("active"),this.selectedBtn.innerHTML=`${this.selectedCards.length}`}else{const e=document.createElement("p");e.className="favorite-number_limit",e.innerHTML="Извините, все слоты заполнены",this.selectedBtn.append(e)}}checkIfSelected(){const e=this.selectedCards.map((e=>e.num));this.cardsOnPageArray=this.cardsOnPageArray.map((s=>e.includes(s.num)?Object.assign(Object.assign({},s),{selected:!0}):s))}setLocalStorage(){localStorage.setItem("filters",JSON.stringify(this.filters)),localStorage.setItem("sortConditions",JSON.stringify(this.sortConditions)),localStorage.setItem("selectedCards",JSON.stringify(this.selectedCards))}setButtons(){this.sortConditions&&"name"===this.sortConditions.key&&this.sortConditions.direction===e.ASC&&(this.selectBtn.value="name-acs"),this.sortConditions&&"name"===this.sortConditions.key&&this.sortConditions.direction===e.DSC&&(this.selectBtn.value="name-dsc"),this.sortConditions&&"year"===this.sortConditions.key&&this.sortConditions.direction===e.ASC&&(this.selectBtn.value="year-acs"),this.sortConditions&&"year"===this.sortConditions.key&&this.sortConditions.direction===e.DSC&&(this.selectBtn.value="year-dsc"),!0===this.filters.favorite&&(this.favoriteBtn.checked=!0),this.sizeBtns.forEach((e=>{this.filters.size&&this.filters.size.includes(e.dataset.filter)&&(e.checked=!0)})),this.colorBtns.forEach((e=>{this.filters.color&&this.filters.color.includes(e.dataset.filter)&&e.classList.add("active")})),this.shapeBtns.forEach((e=>{this.filters.shape&&this.filters.shape.includes(e.dataset.filter)&&e.classList.add("active")}));const s=new l;this.filters.count&&(this.sliders[0].value=this.filters.count.from.toString(),this.sliders[1].value=this.filters.count.to.toString()),this.filters.year&&(this.sliders[2].value=this.filters.year.from.toString(),this.sliders[3].value=this.filters.year.to.toString()),s.setRangeSliders(this.sliders)}setSelected(){this.selectedBtn.innerHTML=`${this.selectedCards.length}`}}).getCardsList()})()})();